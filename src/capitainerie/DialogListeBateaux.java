/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package capitainerie;

import Amarrages.Amarrage;
import Amarrages.Ponton;
import Amarrages.Quai;
import HarbourGlobal.DialogResult;
import VehiculesMarins.Bateau;
import VehiculesMarins.MoyenDeTransportSurEau;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Vector;
import java.util.regex.PatternSyntaxException;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author hydro
 */
public class DialogListeBateaux extends javax.swing.JDialog {

    private ArrayList<String> test;
    private boolean _departPossible;
    
    private boolean _fenetre;
    
    private Bateau _bateauDepart = null;
    
    private DialogResult _result = DialogResult.untouched;
    
    public DialogListeBateaux(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public DialogListeBateaux(java.awt.Frame parent, boolean modal, Vector<Amarrage> listeAmarrages, boolean search, boolean fenetre,boolean departpossible) {
        this(parent, modal);
        InitListe(listeAmarrages);
        PanelSearch.setVisible(search); // true ou false
        _departPossible = departpossible;
        _fenetre = fenetre;
    }
    
    private void InitListe(Vector<Amarrage> listeAmarrages)
    {
         Enumeration enu = listeAmarrages.elements();
        while(enu.hasMoreElements())
        {
            Amarrage am = (Amarrage)enu.nextElement();
            if(am instanceof Ponton)
                AjouterPonton((Ponton)am);
            else
            if(am instanceof Quai)
            AjouterQuai((Quai)am);
        }
        
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(TableBateaux.getModel());
        TableBateaux.setRowSorter(sorter);
        //TableBateaux.removeColumn(TableBateaux.getColumnModel().getColumn(3));
        
        TableBateaux.getColumnModel().getColumn(3).setMinWidth(0);
        TableBateaux.getColumnModel().getColumn(3).setMaxWidth(0);
        TableBateaux.getColumnModel().getColumn(3).setWidth(0);
        
        ArrayList<RowSorter.SortKey> sortKeys = new ArrayList<>();

        sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING)); // tri ordonné sur le nom du bateau (index 0) 
        
        sortKeys.add(new RowSorter.SortKey(1, SortOrder.ASCENDING)); // et tri ordonné sur le port d'attache du bateau (index 1)
        
        sorter.setSortKeys(sortKeys);
        sorter.sort();
    }
    
    private void AjouterPonton(Ponton ponton)
    {
        Vector ligne;
        
        DefaultTableModel dtm = (DefaultTableModel)this.TableBateaux.getModel();
        
        for(int y = 1; y <= 2; y++)
        {
            MoyenDeTransportSurEau[] mte = ponton.getListe(y);
            for(int i = 0; i < mte.length; i++)
            {
                Bateau bp = (Bateau)mte[i];
                if(bp != null)
                {
                    ligne = new Vector();
                    ligne.add(bp.getNom());
                    ligne.add(bp.getPortAttache()); // port attache
                    ligne.add(ponton.getIdentifiant()+y + "*" + (i+1));
                    ligne.add(bp);
                    ligne.add(bp.GetDateArrivee());
                    
                    dtm.addRow(ligne);
                }

            }
        }
    }

    private void AjouterQuai(Quai quai)
    {
        Vector ligne;
        DefaultTableModel dtm = (DefaultTableModel)this.TableBateaux.getModel();
        
        MoyenDeTransportSurEau[] mte = quai.getListe();
        for(int i = 0; i < mte.length; i++)
        {
            Bateau bp = (Bateau)mte[i];
            if(bp != null)
            {
                ligne = new Vector();

                ligne.add(bp.getNom());
                ligne.add(bp.getPortAttache());
                ligne.add(quai.getIdentifiant() + "*"+(i+1)); 
                ligne.add(bp);
                ligne.add(bp.GetDateArrivee());
                
                dtm.addRow(ligne);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableBateaux = new javax.swing.JTable();
        PanelSearch = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        InputNom = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Liste des Bateaux");
        setResizable(false);

        TableBateaux.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom du bateau", "Port d'attache", "Amarrage", "Title 4", "Date d'arrivée"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableBateaux.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableBateauxMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableBateaux);

        jLabel2.setText("Recherche Bateau");

        InputNom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                InputNomKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout PanelSearchLayout = new javax.swing.GroupLayout(PanelSearch);
        PanelSearch.setLayout(PanelSearchLayout);
        PanelSearchLayout.setHorizontalGroup(
            PanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InputNom, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelSearchLayout.setVerticalGroup(
            PanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSearchLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(PanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(InputNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InputNomKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InputNomKeyReleased
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(TableBateaux.getModel());
        TableBateaux.setRowSorter(sorter);
        String text = InputNom.getText();
            if(text.length() == 0) {
               sorter.setRowFilter(null);
            } else {
               try {
                  sorter.setRowFilter(RowFilter.regexFilter(text));
               } catch(PatternSyntaxException pse) {
                     System.out.println("Bad regex pattern");
               }
             }
    }//GEN-LAST:event_InputNomKeyReleased

    private void TableBateauxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableBateauxMouseClicked
        Bateau bat = (Bateau)TableBateaux.getValueAt(TableBateaux.getSelectedRow(),3);
        if(_fenetre == true)
        {
           DialogDetailBateau ddb = new DialogDetailBateau((java.awt.Frame)getParent(), true, bat, _departPossible);
            ddb.setVisible(true);
            if(ddb.getResult() == DialogResult.ok)
            {
                _bateauDepart = ddb.getBateau();
                _result = DialogResult.ok;

                this.setVisible(false);

            } 
        }
        else
        {
            DialogDetailEquipage dde = new DialogDetailEquipage((java.awt.Frame)getParent(), true, bat.getEquipage());
            dde.setVisible(true);
        }
        
    }//GEN-LAST:event_TableBateauxMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed
 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogListeBateaux.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogListeBateaux.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogListeBateaux.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogListeBateaux.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogListeBateaux dialog = new DialogListeBateaux(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField InputNom;
    private javax.swing.JPanel PanelSearch;
    private javax.swing.JTable TableBateaux;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    public DialogResult getResult()
    {
        return _result;
    }
    
    public Bateau getBateauDepart()
    {
        return _bateauDepart;
    }
}
